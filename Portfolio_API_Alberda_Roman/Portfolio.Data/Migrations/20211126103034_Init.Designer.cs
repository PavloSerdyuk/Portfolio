// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio.Data.Context;

namespace Portfolio.Data.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20211126103034_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Portfolio.Data.Entities.Representation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpeakerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SpeakerId");

                    b.ToTable("Representation");
                });

            modelBuilder.Entity("Portfolio.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Petro",
                            LastName = "Poroshenko",
                            Password = "admin",
                            Role = "Admin",
                            Username = "Getman"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Roman",
                            LastName = "Alberda",
                            Password = "user",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("Portfolio.Data.Entities.UserRepresentation", b =>
                {
                    b.Property<int>("RepresentationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RepresentationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRepresentation");
                });

            modelBuilder.Entity("Portfolio.Data.Entities.Representation", b =>
                {
                    b.HasOne("Portfolio.Data.Entities.User", "Speaker")
                        .WithMany("CreatedRepresentations")
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Speaker");
                });

            modelBuilder.Entity("Portfolio.Data.Entities.UserRepresentation", b =>
                {
                    b.HasOne("Portfolio.Data.Entities.Representation", "Representation")
                        .WithMany("UserRepresentations")
                        .HasForeignKey("RepresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfolio.Data.Entities.User", "User")
                        .WithMany("UserRepresentations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Representation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Portfolio.Data.Entities.Representation", b =>
                {
                    b.Navigation("UserRepresentations");
                });

            modelBuilder.Entity("Portfolio.Data.Entities.User", b =>
                {
                    b.Navigation("CreatedRepresentations");

                    b.Navigation("UserRepresentations");
                });
#pragma warning restore 612, 618
        }
    }
}
